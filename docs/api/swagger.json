{
  "openapi": "3.1.0",
  "info": {
    "title": "KitaBantu Backend Mobile API",
    "description": "This project is a backend API for an ecommerce-like application built with PHP (Laravel). It provides user authentication using JWT and custom tokens, order management, real-time chat via WebSocket, payment integration using Midtrans, and message delivery between services using RabbitMQ.",
    "version": "1.0.0",
    "contact": {
      "name": "Developer",
      "email": "azzam.sykir.work@gmail.com"
    }
  },
  "externalDocs": {
    "description": "GitHub Repository",
    "url": "https://github.com/AzzamSyakir/go-micro-services"
  },
  "servers": [
    {
      "url": "http://localhost:8000/",
      "description": "Local server"
    },
    {
      "url": "https://localhost:8000/",
      "description": "HTTPS Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your bearer token in the format **Bearer <token>**"
      }
    },
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "example.user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "strongpassword123"
          },
          "full_name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "phone_number": {
            "type": "string",
            "description": "User's phone number",
            "example": "081234567890"
          },
          "nick_name": {
            "type": "string",
            "description": "User's nickname",
            "example": "JONE"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "other"
            ],
            "description": "User's gender",
            "example": "male"
          },
          "villageId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user's village",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "preferred_service": {
            "type": "string",
            "description": "User's preferred service",
            "example": "translator"
          },
          "profile_photo": {
            "type": "string",
            "format": "binary",
            "description": "Profile photo (optional)."
          }
        },
        "required": [
          "email",
          "password",
          "full_name",
          "phone_number",
          "nick_name",
          "gender",
          "villageId",
          "preferred_service"
        ]
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "example.user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "examplePassword123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "azzamsykir@gmail.com"
          },
          "old_password": {
            "type": "string",
            "format": "password",
            "example": "strongpassword123"
          },
          "new_password": {
            "type": "string",
            "format": "password",
            "example": "strongpassword123"
          }
        },
        "required": [
          "email",
          "old_password",
          "new_password"
        ]
      },
      "SignUpSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "SignUp succeeded."
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "profile": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "user_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "nick_name": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "domicile": {
                    "type": "string"
                  },
                  "preferred_service": {
                    "type": "string"
                  },
                  "picture_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 201
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad request."
          },
          "data": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 400
          }
        }
      },
      "SignInSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "SignIn succeeded"
          },
          "data": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "refresh_token": {
                "type": "string"
              },
              "token_type": {
                "type": "string"
              },
              "expires_in": {
                "type": "integer"
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "SignOutSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "SignOut successful. Token invalidated and refresh token removed"
          },
          "data": {
            "type": [
              "null"
            ]
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "GenerateAccessTokenSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Access token generated successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "token_type": {
                "type": "string"
              },
              "expires_in": {
                "type": "integer"
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "GenerateRefreshTokenSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Token refreshed successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "refresh_token": {
                "type": "string"
              },
              "token_type": {
                "type": "string"
              },
              "expires_in": {
                "type": "integer"
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "UpdatePasswordSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Password updated successfully"
          },
          "data": {
            "type": [
              "null"
            ]
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "DomicileSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully retrieved full domicile address"
          },
          "data": {
            "type": "object",
            "properties": {
              "province": {
                "type": "string"
              },
              "regency": {
                "type": "string"
              },
              "district": {
                "type": "string"
              },
              "village": {
                "type": "string"
              },
              "full_address": {
                "type": "string"
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "VillageListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully retrieved list of villages"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "district_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "DistrictListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully retrieved list of districts"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "regency_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "RegencyListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully retrieved list of regencies"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "province_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "ProvinceListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully retrieved list of provinces"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "OrderCreationRequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the client placing the order",
            "example": "39632c89-5bf6-4f19-908b-f43cdd61fdba"
          },
          "freelancer_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the freelancer for the order",
            "example": "f963b760-d38d-47f6-b1db-6811118f83ef"
          },
          "work_location": {
            "type": "string",
            "description": "Full address of the work location",
            "example": "PONDOK JAGUNG TIMUR, SERPONG UTARA, KOTA TANGERANG SELATAN, BANTEN"
          },
          "work_start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of the work",
            "example": "2025-05-06T05:00:00Z"
          },
          "work_end_time": {
            "type": "string",
            "format": "date-time",
            "description": "End time of the work",
            "example": "2025-05-06T20:00:00Z"
          },
          "estimated_travel_time": {
            "type": "integer",
            "description": "Estimated travel time in hours",
            "example": 2
          },
          "hourly_rate": {
            "type": "number",
            "format": "float",
            "description": "Hourly rate of the freelancer",
            "example": 50000.00
          },
          "total_cost": {
            "type": "number",
            "format": "float",
            "description": "Total cost of the order",
            "example": 751666.67
          }
        },
        "required": [
          "client_id",
          "freelancer_id",
          "work_location",
          "work_start_time",
          "work_end_time",
          "estimated_travel_time",
          "hourly_rate",
          "total_cost"
        ]
      },
      "OrderCreationSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Order created successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "client_id": {
                "type": "string",
                "format": "uuid"
              },
              "freelancer_id": {
                "type": "string",
                "format": "uuid"
              },
              "work_location": {
                "type": "string"
              },
              "work_start_time": {
                "type": "string",
                "format": "date-time"
              },
              "work_end_time": {
                "type": "string",
                "format": "date-time"
              },
              "estimated_travel_time": {
                "type": "string"
              },
              "hourly_rate": {
                "type": "string"
              },
              "total_cost": {
                "type": "string"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "freelancer": {
                "type": [
                  "object",
                  "null"
                ]
              },
              "client": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "auth_method": {
                    "type": "string"
                  },
                  "email_verified": {
                    "type": "integer"
                  },
                  "email_verified_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 201
          }
        }
      },
      "CreateReviewRequest": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the order being reviewed",
            "example": "791e9bc6-8d90-4b72-afc5-e9875af19998"
          },
          "rating_star": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "Star rating for the review (1-5)",
            "example": 5
          },
          "rating_text": {
            "type": "string",
            "description": "Text content of the review",
            "example": "ok bagus"
          },
          "review_file": {
            "type": "string",
            "format": "binary",
            "description": "Optional file attached to the review (e.g., an image)"
          }
        },
        "required": [
          "order_id",
          "rating_star",
          "rating_text"
        ]
      },
      "CreateReviewSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Review has been successfully created."
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "order_id": {
                "type": "string",
                "format": "uuid"
              },
              "rating_star": {
                "type": "integer"
              },
              "rating_text": {
                "type": "string"
              },
              "review_file_url": {
                "type": "string",
                "format": "uri"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 201
          }
        }
      },
      "GetReviewsByClientSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Reviews retrieved successfully."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "order_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "rating_star": {
                  "type": "integer"
                },
                "rating_text": {
                  "type": "string"
                },
                "review_file_url": {
                  "type": "string",
                  "format": "uri"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "CreateChatRequest": {
        "type": "object",
        "properties": {
          "chat": {
            "type": "string",
            "example": "test"
          },
          "freelancer_id": {
            "type": "string",
            "format": "uuid",
            "example": "f963b760-d38d-47f6-b1db-6811118f83ef"
          }
        },
        "required": [
          "chat",
          "freelancer_id"
        ]
      },
      "CreateChatSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Chat sent successfully."
          },
          "data": {
            "type": "object",
            "properties": {
              "room": {
                "type": "string",
                "example": "test-room-1"
              },
              "user_id": {
                "type": "string",
                "format": "uuid",
                "example": "2fe48058-2cd3-4fe4-96d1-b2032379e003"
              },
              "chat": {
                "type": "string",
                "example": "test"
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "GetChatHistorySuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Chat retrieved successfully."
          },
          "data": {
            "type": "object",
            "properties": {
              "room_id": {
                "type": "string",
                "format": "uuid",
                "example": "00889a24-fd07-4444-b036-48c89ffb8757"
              },
              "chat_history": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4d56004a-c535-4a2d-9318-406b005c4cbc"
                    },
                    "chats": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "example": null
                    },
                    "sender_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "2fe48058-2cd3-4fe4-96d1-b2032379e003"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-07-18T03:50:22.000000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-07-18T03:50:22.000000Z"
                    }
                  }
                }
              }
            }
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "PaymentBaseRequest": {
        "type": "object",
        "properties": {
          "freelancer_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the freelancer receiving the payment.",
            "example": "f963b760-d38d-47f6-b1db-6811118f83ef"
          },
          "amount": {
            "type": "integer",
            "description": "The amount of money to be paid.",
            "example": 6000000
          }
        },
        "required": [
          "freelancer_id",
          "amount",
          "payment_method"
        ]
      },
      "CardPaymentDetails": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string",
            "description": "The credit or debit card number.",
            "example": "4811111111111114"
          },
          "card_cvv": {
            "type": "string",
            "description": "The Card Verification Value (CVV).",
            "example": "123"
          },
          "card_exp": {
            "type": "string",
            "description": "The card's expiration date (MM/YY).",
            "pattern": "^(0[1-9]|1[0-2])\\/([0-9]{2})$",
            "example": "12/25"
          },
          "card_holder_name": {
            "type": "string",
            "description": "The name of the cardholder.",
            "example": "Asa Kusuma"
          },
          "card_address": {
            "type": "string",
            "description": "The billing address associated with the card.",
            "example": "Jl. Kemerdekaan No. 17"
          },
          "save_card": {
            "type": "boolean",
            "description": "Whether to save the card details for future use.",
            "example": true
          }
        },
        "required": [
          "card_number",
          "card_cvv",
          "card_exp",
          "card_holder_name"
        ]
      },
      "CreatePaymentRequestOther": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentBaseRequest"
          },
          {
            "type": "object",
            "properties": {
              "payment_method": {
                "type": "string",
                "enum": [
                  "qris",
                  "gopay",
                  "shopeepay",
                  "bri",
                  "bca",
                  "bni",
                  "mandiri",
                  "alfamart",
                  "indomaret"
                ],
                "description": "The payment method to be used.",
                "example": "bri"
              }
            }
          }
        ]
      },
      "CreatePaymentRequest": {
        "oneOf": [
          {},
          {
            "$ref": "#/components/schemas/CreatePaymentRequestOther"
          }
        ],
        "discriminator": {
          "propertyName": "payment_method",
          "mapping": {
            "card": "#/components/schemas/CreatePaymentRequestCard",
            "qris": "#/components/schemas/CreatePaymentRequestOther",
            "gopay": "#/components/schemas/CreatePaymentRequestOther",
            "shopeepay": "#/components/schemas/CreatePaymentRequestOther",
            "bri": "#/components/schemas/CreatePaymentRequestOther",
            "bca": "#/components/schemas/CreatePaymentRequestOther",
            "bni": "#/components/schemas/CreatePaymentRequestOther",
            "mandiri": "#/components/schemas/CreatePaymentRequestOther",
            "alfamart": "#/components/schemas/CreatePaymentRequestOther",
            "indomaret": "#/components/schemas/CreatePaymentRequestOther"
          }
        }
      },
      "PaymentObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2"
          },
          "payment_type": {
            "type": "string",
            "example": "pay_freelancer"
          },
          "payment_method": {
            "type": "string",
            "example": "bri"
          },
          "amount": {
            "type": "integer",
            "example": 6000000
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-18T06:41:41.083295Z"
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "client_id": {
            "type": "string",
            "format": "uuid",
            "example": "2fe48058-2cd3-4fe4-96d1-b2032379e003"
          },
          "freelancer_id": {
            "type": "string",
            "format": "uuid",
            "example": "f963b760-d38d-47f6-b1db-6811118f83ef"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-18T06:41:41.000000Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-18T06:41:41.000000Z"
          }
        },
        "required": [
          "id",
          "payment_type",
          "payment_method",
          "amount",
          "date",
          "status",
          "client_id",
          "freelancer_id",
          "updated_at",
          "created_at"
        ]
      },
      "PaymentInfoBankTransfer": {
        "type": "object",
        "properties": {
          "va_number": {
            "type": "string",
            "description": "Virtual Account number for bank transfers.",
            "example": "278241834256564383"
          }
        },
        "required": [
          "va_number"
        ]
      },
      "PaymentInfoCard": {
        "type": "object",
        "properties": {
          "redirect_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to redirect for 3D Secure authentication.",
            "example": "https://api.sandbox.midtrans.com/v2/3ds/redirect/9931b646-7534-414a-8d68-7702a2a58fda"
          }
        },
        "required": [
          "redirect_url"
        ]
      },
      "PaymentInfoQRIS": {
        "type": "object",
        "properties": {
          "qr_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to the QR code image for QRIS payment.",
            "example": "https://api.sandbox.midtrans.com/v2/qris/eac710b1-4a45-431a-a72e-78209074f4de/qr-code"
          }
        },
        "required": [
          "qr_url"
        ]
      },
      "PaymentInfoGopay": {
        "type": "object",
        "properties": {
          "redirect_url": {
            "type": "string",
            "format": "uri",
            "description": "Deep link or redirect URL for GoPay payment.",
            "example": "https://simulator.sandbox.midtrans.com/v2/deeplink/detail?tref=A120250718065724qNah7tIZJjID&callbackUrl=%3Forder_id%3Dcd884adb-aae9-469d-b9c3-49d6d3672d67"
          }
        },
        "required": [
          "redirect_url"
        ]
      },
      "PaymentInfoAlfamart": {
        "type": "object",
        "properties": {
          "bill_key": {
            "type": "string",
            "description": "Unique bill key for Alfamart payment.",
            "example": "VA_ALFAMART_12345"
          },
          "payment_code": {
            "type": "string",
            "description": "Payment code to be presented at Alfamart.",
            "example": "0000123456789"
          }
        },
        "required": [
          "bill_key",
          "payment_code"
        ]
      },
      "PaymentInfoIndomaret": {
        "type": "object",
        "properties": {
          "payment_code": {
            "type": "string",
            "description": "Payment code to be presented at Indomaret.",
            "example": "5555123456789"
          }
        },
        "required": [
          "payment_code"
        ]
      },
      "PaymentInfoOther": {
        "type": "object",
        "description": "Generic payment info for methods without specific fields.",
        "properties": {}
      },
      "PaymentSuccessResponseBankTransfer": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Payment is being processed."
          },
          "data": {
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentObject"
              },
              "payment_info": {
                "$ref": "#/components/schemas/PaymentInfoBankTransfer"
              }
            },
            "required": [
              "payment",
              "payment_info"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "PaymentSuccessResponseCard": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Payment is being processed."
          },
          "data": {
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentObject"
              },
              "payment_info": {
                "$ref": "#/components/schemas/PaymentInfoCard"
              }
            },
            "required": [
              "payment",
              "payment_info"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "PaymentSuccessResponseQRIS": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Payment is being processed."
          },
          "data": {
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentObject"
              },
              "payment_info": {
                "$ref": "#/components/schemas/PaymentInfoQRIS"
              }
            },
            "required": [
              "payment",
              "payment_info"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "PaymentSuccessResponseGopay": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Payment is being processed."
          },
          "data": {
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentObject"
              },
              "payment_info": {
                "$ref": "#/components/schemas/PaymentInfoGopay"
              }
            },
            "required": [
              "payment",
              "payment_info"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "PaymentSuccessResponseAlfamart": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Payment is being processed."
          },
          "data": {
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentObject"
              },
              "payment_info": {
                "$ref": "#/components/schemas/PaymentInfoAlfamart"
              }
            },
            "required": [
              "payment",
              "payment_info"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "PaymentSuccessResponseIndomaret": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Payment is being processed."
          },
          "data": {
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentObject"
              },
              "payment_info": {
                "$ref": "#/components/schemas/PaymentInfoIndomaret"
              }
            },
            "required": [
              "payment",
              "payment_info"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "PaymentSuccessResponseOther": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Payment is being processed."
          },
          "data": {
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentObject"
              },
              "payment_info": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "Payment info can be null or an empty object if no specific details are needed for this method.",
                "example": {}
              }
            },
            "required": [
              "payment"
            ]
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "PaymentSuccessResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PaymentSuccessResponseBankTransfer"
          },
          {
            "$ref": "#/components/schemas/PaymentSuccessResponseCard"
          },
          {
            "$ref": "#/components/schemas/PaymentSuccessResponseQRIS"
          },
          {
            "$ref": "#/components/schemas/PaymentSuccessResponseGopay"
          },
          {
            "$ref": "#/components/schemas/PaymentSuccessResponseAlfamart"
          },
          {
            "$ref": "#/components/schemas/PaymentSuccessResponseIndomaret"
          },
          {
            "$ref": "#/components/schemas/PaymentSuccessResponseOther"
          }
        ],
        "discriminator": {
          "propertyName": "data.payment.payment_method",
          "mapping": {
            "bri": "#/components/schemas/PaymentSuccessResponseBankTransfer",
            "bca": "#/components/schemas/PaymentSuccessResponseBankTransfer",
            "bni": "#/components/schemas/PaymentSuccessResponseBankTransfer",
            "mandiri": "#/components/schemas/PaymentSuccessResponseBankTransfer",
            "card": "#/components/schemas/PaymentSuccessResponseCard",
            "qris": "#/components/schemas/PaymentSuccessResponseQRIS",
            "gopay": "#/components/schemas/PaymentSuccessResponseGopay",
            "shopeepay": "#/components/schemas/PaymentSuccessResponseOther",
            "alfamart": "#/components/schemas/PaymentSuccessResponseAlfamart",
            "indomaret": "#/components/schemas/PaymentSuccessResponseIndomaret"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to user authentication, including sign-up, sign-in, token generation, validation, and management."
    },
    {
      "name": "Domicile",
      "description": "Endpoints providing hierarchical domicile data across Indonesia (province to village). Used in user registration and service-related processes to ensure precise location selection."
    },
    {
      "name": "Orders",
      "description": "Endpoints related to order management, including orders, handling r"
    },
    {
      "name": "Reviews",
      "description": "Endpoints for managing client reviews of freelancer services."
    },
    {
      "name": "Chat",
      "description": "Endpoints for real-time chat functionality between clients and freelancers."
    },
    {
      "name": "Payments",
      "description": "Endpoints for processing various types of payments."
    }
  ],
  "paths": {
    "/api/auth/sign-up": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "operationId": "SignUp",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate user and get tokens",
        "operationId": "SignIn",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials or other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-out": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Invalidate user's current token and refresh token",
        "operationId": "SignOut",
        "responses": {
          "200": {
            "description": "User successfully signed out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignOutSuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/auth/generate-access-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate a new access token using a refresh token",
        "operationId": "GenerateAccessToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "description": "The refresh token to generate a new access token.",
                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateAccessTokenSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate a new access token and refresh token",
        "description": "This endpoint requires an existing access token to be authenticated. It's intended to be used when both access and refresh tokens need to be re-issued.",
        "operationId": "GenerateRefreshToken",
        "responses": {
          "200": {
            "description": "New access and refresh tokens generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateRefreshTokenSuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/auth/update-password": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update user's password",
        "operationId": "UpdatePassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePasswordSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or old password mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/domicile/{villageId}": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get full domicile address by village ID",
        "operationId": "GetDomicileById",
        "parameters": [
          {
            "name": "villageId",
            "in": "path",
            "required": true,
            "description": "ID of the village",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved full domicile address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomicileSuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Village not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domicile/villages": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get a list of villages",
        "operationId": "GetVillages",
        "parameters": [
          {
            "name": "district_id",
            "in": "query",
            "description": "Filter villages by district ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search villages by name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of villages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VillageListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domicile/districts": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get a list of districts",
        "operationId": "GetDistricts",
        "parameters": [
          {
            "name": "regency_id",
            "in": "query",
            "description": "Filter districts by regency ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search districts by name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of districts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistrictListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domicile/regencies": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get a list of regencies",
        "operationId": "GetRegencies",
        "parameters": [
          {
            "name": "province_id",
            "in": "query",
            "description": "Filter regencies by province ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search regencies by name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of regencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegencyListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domicile/provinces": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get a list of provinces",
        "operationId": "GetProvinces",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Search provinces by name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of provinces",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvinceListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new order",
        "operationId": "CreateOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreationRequest"
              },
              "examples": {
                "Example Order": {
                  "value": {
                    "client_id": "39632c89-5bf6-4f19-908b-f43cdd61fdba",
                    "freelancer_id": "f963b760-d38d-4f76-b1db-6811118f83ef",
                    "work_location": "PONDOK JAGUNG TIMUR, SERPONG UTARA, KOTA TANGERANG SELATAN, BANTEN",
                    "work_start_time": "2025-05-06T05:00:00Z",
                    "work_end_time": "2025-05-06T20:00:00Z",
                    "estimated_travel_time": 2,
                    "hourly_rate": 50000.00,
                    "total_cost": 751666.67
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCreationSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request payload or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g., missing or invalid token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/reviews": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Create a new review for an order",
        "operationId": "CreateReview",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewRequest"
              },
              "examples": {
                "Example Review": {
                  "value": {
                    "order_id": "791e9bc6-8d90-4b72-afc5-e9875af19998",
                    "rating_star": 5,
                    "rating_text": "Sangat membantu, pekerjaan selesai dengan cepat dan rapi. Terima kasih!",
                    "review_file": "binary_data_here"
                  }
                }
              },
              "encoding": {
                "review_file": {
                  "contentType": "image/png, image/jpeg"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReviewSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/reviews/client/{clientId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get reviews by client ID",
        "operationId": "GetReviewsByClientId",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "ID of the client whose reviews are to be retrieved",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reviews retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReviewsByClientSuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found or no reviews for this client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/chat/send": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Send a chat message",
        "operationId": "SendChat",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChatSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/chat/history/{freelancerId}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get chat history with a freelancer",
        "operationId": "GetChatHistory",
        "parameters": [
          {
            "name": "freelancerId",
            "in": "path",
            "required": true,
            "description": "ID of the freelancer to retrieve chat history with",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChatHistorySuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Chat history not found for the given freelancer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Initiate a new payment",
        "operationId": "CreatePayment",
        "description": "Initiates a payment transaction with various methods including card, e-money, bank transfer, and over-the-counter. The request body structure changes based on the `payment_method`.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              },
              "examples": {
                "Card Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 6000000,
                    "payment_method": "card",
                    "card": {
                      "card_number": "4811111111111114",
                      "card_cvv": "123",
                      "card_exp": "12/25",
                      "card_holder_name": "Asa Kusuma",
                      "card_address": "Jl. Kemerdekaan No. 17",
                      "save_card": true
                    }
                  }
                },
                "QRIS Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 500000,
                    "payment_method": "qris"
                  }
                },
                "GoPay Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 750000,
                    "payment_method": "gopay"
                  }
                },
                "ShopeePay Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 300000,
                    "payment_method": "shopeepay"
                  }
                },
                "Bank Transfer BRI": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 1200000,
                    "payment_method": "bri"
                  }
                },
                "Bank Transfer BCA": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 1500000,
                    "payment_method": "bca"
                  }
                },
                "Bank Transfer Mandiri": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 1800000,
                    "payment_method": "mandiri"
                  }
                },
                "Bank Transfer BNI": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 2000000,
                    "payment_method": "bni"
                  }
                },
                "Alfamart Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 200000,
                    "payment_method": "alfamart"
                  }
                },
                "Indomaret Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 250000,
                    "payment_method": "indomaret"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "status": "success",
                    "message": "Payment is being processed.",
                    "data": {
                      "payment": {
                        "id": "fb1e0dff-2541-4f84-9b84-3b628f1138f5",
                        "payment_type": "pay_freelancer",
                        "payment_method": "card",
                        "amount": 6000000,
                        "date": "2025-07-18T06:55:32.376679Z",
                        "status": "pending",
                        "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                        "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                        "updated_at": "2025-07-18T06:55:32.000000Z",
                        "created_at": "2025-07-18T06:55:32.000000Z"
                      },
                      "payment_info": {
                        "redirect_url": "https://api.sandbox.midtrans.com/v2/3ds/redirect/9931b646-7534-414a-8d68-7702a2a58fda"
                      }
                    }
                  }
                },
                "examples": {
                  "Card Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "fb1e0dff-2541-4f84-9b84-3b628f1138f5",
                          "payment_type": "pay_freelancer",
                          "payment_method": "card",
                          "amount": 6000000,
                          "date": "2025-07-18T06:55:32.376679Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:55:32.000000Z",
                          "created_at": "2025-07-18T06:55:32.000000Z"
                        },
                        "payment_info": {
                          "redirect_url": "https://api.sandbox.midtrans.com/v2/3ds/redirect/9931b646-7534-414a-8d68-7702a2a58fda"
                        }
                      }
                    }
                  },
                  "QRIS Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "c8a44d8b-eb84-40bf-b23f-72370a38e28c",
                          "payment_type": "pay_freelancer",
                          "payment_method": "qris",
                          "amount": 6000000,
                          "date": "2025-07-18T06:56:54.004873Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:56:54.000000Z",
                          "created_at": "2025-07-18T06:56:54.000000Z"
                        },
                        "payment_info": {
                          "qr_url": "https://api.sandbox.midtrans.com/v2/qris/eac710b1-4a45-431a-a72e-78209074f4de/qr-code"
                        }
                      }
                    }
                  },
                  "GoPay Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "cd884adb-aae9-469d-b9c3-49d6d3672d67",
                          "payment_type": "pay_freelancer",
                          "payment_method": "gopay",
                          "amount": 6000000,
                          "date": "2025-07-18T06:57:24.084759Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:57:24.000000Z",
                          "created_at": "2025-07-18T06:57:24.000000Z"
                        },
                        "payment_info": {
                          "redirect_url": "https://simulator.sandbox.midtrans.com/v2/deeplink/detail?tref=A120250718065724qNah7tIZJjID&callbackUrl=%3Forder_id%3Dcd884adb-aae9-469d-b9c3-49d6d3672d67"
                        }
                      }
                    }
                  },
                  "ShopeePay Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "shopeepay-payment-id",
                          "payment_type": "pay_freelancer",
                          "payment_method": "shopeepay",
                          "amount": 300000,
                          "date": "2025-07-18T07:05:00.000000Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T07:05:00.000000Z",
                          "created_at": "2025-07-18T07:05:00.000000Z"
                        },
                        "payment_info": {
                          "redirect_url": "https://api.sandbox.midtrans.com/v2/shopeepay/redirect/some-token"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (BRI)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "pay_freelancer",
                          "payment_method": "bri",
                          "amount": 6000000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "va_number": "278241834256564383"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (BCA)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "pay_freelancer",
                          "payment_method": "bca",
                          "amount": 6000000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "va_number": "123456789012345"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (Mandiri)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "pay_freelancer",
                          "payment_method": "mandiri",
                          "amount": 1800000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "bill_key": "MANDIRI_BILL_12345",
                          "biller_code": "70012"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (BNI)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "pay_freelancer",
                          "payment_method": "bni",
                          "amount": 2000000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "va_number": "8888123456789012"
                        }
                      }
                    }
                  },
                  "Alfamart Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "some-id",
                          "payment_type": "pay_freelancer",
                          "payment_method": "alfamart",
                          "amount": 150000,
                          "date": "2025-07-18T07:00:00.000000Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T07:00:00.000000Z",
                          "created_at": "2025-07-18T07:00:00.000000Z"
                        },
                        "payment_info": {
                          "bill_key": "VA_ALFAMART_12345",
                          "payment_code": "0000123456789"
                        }
                      }
                    }
                  },
                  "Indomaret Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "indomaret-payment-id",
                          "payment_type": "pay_freelancer",
                          "payment_method": "indomaret",
                          "amount": 250000,
                          "date": "2025-07-18T07:10:00.000000Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T07:10:00.000000Z",
                          "created_at": "2025-07-18T07:10:00.000000Z"
                        },
                        "payment_info": {
                          "payment_code": "5555123456789"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/payments/top-up": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Initiate a new Top Up",
        "operationId": "CreateTopUp",
        "description": "Initiates a top-up transaction using various supported methods such as card, e-money, bank transfer, and over-the-counter. The request body structure dynamically adjusts based on the selected payment_method. Upon successful top-up, the user's balance will increase by the specified amount.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              },
              "examples": {
                "Card Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 6000000,
                    "payment_method": "card",
                    "card": {
                      "card_number": "4811111111111114",
                      "card_cvv": "123",
                      "card_exp": "12/25",
                      "card_holder_name": "Asa Kusuma",
                      "card_address": "Jl. Kemerdekaan No. 17",
                      "save_card": true
                    }
                  }
                },
                "QRIS Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 500000,
                    "payment_method": "qris"
                  }
                },
                "GoPay Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 750000,
                    "payment_method": "gopay"
                  }
                },
                "ShopeePay Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 300000,
                    "payment_method": "shopeepay"
                  }
                },
                "Bank Transfer BRI": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 1200000,
                    "payment_method": "bri"
                  }
                },
                "Bank Transfer BCA": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 1500000,
                    "payment_method": "bca"
                  }
                },
                "Bank Transfer Mandiri": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 1800000,
                    "payment_method": "mandiri"
                  }
                },
                "Bank Transfer BNI": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 2000000,
                    "payment_method": "bni"
                  }
                },
                "Alfamart Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 200000,
                    "payment_method": "alfamart"
                  }
                },
                "Indomaret Payment": {
                  "value": {
                    "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                    "amount": 250000,
                    "payment_method": "indomaret"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "status": "success",
                    "message": "Payment is being processed.",
                    "data": {
                      "payment": {
                        "id": "fb1e0dff-2541-4f84-9b84-3b628f1138f5",
                        "payment_type": "top_up",
                        "payment_method": "card",
                        "amount": 6000000,
                        "date": "2025-07-18T06:55:32.376679Z",
                        "status": "pending",
                        "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                        "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                        "updated_at": "2025-07-18T06:55:32.000000Z",
                        "created_at": "2025-07-18T06:55:32.000000Z"
                      },
                      "payment_info": {
                        "redirect_url": "https://api.sandbox.midtrans.com/v2/3ds/redirect/9931b646-7534-414a-8d68-7702a2a58fda"
                      }
                    }
                  }
                },
                "examples": {
                  "Card Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "fb1e0dff-2541-4f84-9b84-3b628f1138f5",
                          "payment_type": "top_up",
                          "payment_method": "card",
                          "amount": 6000000,
                          "date": "2025-07-18T06:55:32.376679Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:55:32.000000Z",
                          "created_at": "2025-07-18T06:55:32.000000Z"
                        },
                        "payment_info": {
                          "redirect_url": "https://api.sandbox.midtrans.com/v2/3ds/redirect/9931b646-7534-414a-8d68-7702a2a58fda"
                        }
                      }
                    }
                  },
                  "QRIS Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "c8a44d8b-eb84-40bf-b23f-72370a38e28c",
                          "payment_type": "top_up",
                          "payment_method": "qris",
                          "amount": 6000000,
                          "date": "2025-07-18T06:56:54.004873Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:56:54.000000Z",
                          "created_at": "2025-07-18T06:56:54.000000Z"
                        },
                        "payment_info": {
                          "qr_url": "https://api.sandbox.midtrans.com/v2/qris/eac710b1-4a45-431a-a72e-78209074f4de/qr-code"
                        }
                      }
                    }
                  },
                  "GoPay Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "cd884adb-aae9-469d-b9c3-49d6d3672d67",
                          "payment_type": "top_up",
                          "payment_method": "gopay",
                          "amount": 6000000,
                          "date": "2025-07-18T06:57:24.084759Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:57:24.000000Z",
                          "created_at": "2025-07-18T06:57:24.000000Z"
                        },
                        "payment_info": {
                          "redirect_url": "https://simulator.sandbox.midtrans.com/v2/deeplink/detail?tref=A120250718065724qNah7tIZJjID&callbackUrl=%3Forder_id%3Dcd884adb-aae9-469d-b9c3-49d6d3672d67"
                        }
                      }
                    }
                  },
                  "ShopeePay Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "shopeepay-payment-id",
                          "payment_type": "top_up",
                          "payment_method": "shopeepay",
                          "amount": 300000,
                          "date": "2025-07-18T07:05:00.000000Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T07:05:00.000000Z",
                          "created_at": "2025-07-18T07:05:00.000000Z"
                        },
                        "payment_info": {
                          "redirect_url": "https://api.sandbox.midtrans.com/v2/shopeepay/redirect/some-token"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (BRI)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "top_up",
                          "payment_method": "bri",
                          "amount": 6000000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "va_number": "278241834256564383"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (BCA)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "top_up",
                          "payment_method": "bca",
                          "amount": 6000000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "va_number": "123456789012345"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (Mandiri)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "top_up",
                          "payment_method": "mandiri",
                          "amount": 1800000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "bill_key": "MANDIRI_BILL_12345",
                          "biller_code": "70012"
                        }
                      }
                    }
                  },
                  "Bank Transfer Response (BNI)": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "03183e3b-1ec8-4501-b0b8-229ba22b6cc2",
                          "payment_type": "top_up",
                          "payment_method": "bni",
                          "amount": 2000000,
                          "date": "2025-07-18T06:41:41.083295Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T06:41:41.000000Z",
                          "created_at": "2025-07-18T06:41:41.000000Z"
                        },
                        "payment_info": {
                          "va_number": "8888123456789012"
                        }
                      }
                    }
                  },
                  "Alfamart Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "some-id",
                          "payment_type": "top_up",
                          "payment_method": "alfamart",
                          "amount": 150000,
                          "date": "2025-07-18T07:00:00.000000Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T07:00:00.000000Z",
                          "created_at": "2025-07-18T07:00:00.000000Z"
                        },
                        "payment_info": {
                          "bill_key": "VA_ALFAMART_12345",
                          "payment_code": "0000123456789"
                        }
                      }
                    }
                  },
                  "Indomaret Payment Response": {
                    "value": {
                      "status": "success",
                      "message": "Payment is being processed.",
                      "data": {
                        "payment": {
                          "id": "indomaret-payment-id",
                          "payment_type": "top_up",
                          "payment_method": "indomaret",
                          "amount": 250000,
                          "date": "2025-07-18T07:10:00.000000Z",
                          "status": "pending",
                          "client_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                          "freelancer_id": "f963b760-d38d-47f6-b1db-6811118f83ef",
                          "updated_at": "2025-07-18T07:10:00.000000Z",
                          "created_at": "2025-07-18T07:10:00.000000Z"
                        },
                        "payment_info": {
                          "payment_code": "5555123456789"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  }
}