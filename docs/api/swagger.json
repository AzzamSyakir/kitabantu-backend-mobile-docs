{
  "swagger": "2.0",
  "info": {
    "title": "KitaBantu Backend Mobile API",
    "description": "This project is a backend API for an ecommerce-like application built with PHP (Laravel). It provides user authentication using JWT and custom tokens, order management, real-time chat via WebSocket, payment integration using Midtrans, and message delivery between services using RabbitMQ.",
    "version": "1.0.0",
    "contact": {
      "name": "Developer",
      "email": "azzam.sykir.work@gmail.com"
    }
  },
  "externalDocs": {
    "description": "GitHub Repository",
    "url": "https://github.com/AzzamSyakir/go-micro-services"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer {token}' to authenticate requests."
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to user authentication, including sign up, sign in, token handling, and token management."
    },
    {
      "name": "Domicile",
      "description": "Provides domicile data (from province to village) across Indonesia. Used during user registration and service ordering to ensure accurate user location selection."
    },
    {
      "name": "Users",
      "description": "User management endpoints."
    },
    {
      "name": "Categories",
      "description": "Endpoints for managing product categories."
    },
    {
      "name": "Products",
      "description": "Endpoints for managing products."
    },
    {
      "name": "Orders",
      "description": "Endpoints for order processing."
    }
  ],
  "paths": {
    "/api/auths/SignUp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a new user.",
        "operationId": "registerUser",
        "description": "Registers a new user. Email will not be delivered yet as the service is using sandbox SMTP.\nSee email example: \"emailExampleLink\"",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true,
            "description": "Example: example.user@example.com"
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true,
            "description": "Example: strongpassword123"
          },
          {
            "in": "formData",
            "name": "full_name",
            "type": "string",
            "required": true,
            "description": "Example: John Doe"
          },
          {
            "in": "formData",
            "name": "phone_number",
            "type": "string",
            "required": true,
            "description": "Example: 081234567890"
          },
          {
            "in": "formData",
            "name": "nick_name",
            "type": "string",
            "required": true,
            "description": "Example: JONE"
          },
          {
            "in": "formData",
            "name": "gender",
            "type": "string",
            "required": true,
            "description": "Example: male"
          },
          {
            "in": "formData",
            "name": "villageId",
            "type": "string",
            "required": true,
            "description": "Example: 123e4567-e89b-12d3-a456-426614174000"
          },
          {
            "in": "formData",
            "name": "preferred_service",
            "type": "string",
            "required": true,
            "description": "Example: translator"
          },
          {
            "in": "formData",
            "name": "profile_photo",
            "type": "file",
            "required": false,
            "description": "Profile photo (optional)."
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "examples": {
              "application/json": {
                "message": "SignUp succeeded.",
                "data": {
                  "user": {
                    "id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                    "email": "azzamsykir@gmail.com",
                    "updated_at": "2025-07-14T08:13:26.000000Z",
                    "created_at": "2025-07-14T08:13:26.000000Z"
                  },
                  "profile": {
                    "id": "2f7cc725-d42a-4266-9c03-2f6795b45a8c",
                    "user_id": "2fe48058-2cd3-4fe4-96d1-b2032379e003",
                    "full_name": "johdoe",
                    "phone_number": "081281466127",
                    "nick_name": "joni",
                    "gender": "male",
                    "domicile": "PONDOK JAGUNG TIMUR, SERPONG UTARA, KOTA TANGERANG SELATAN, BANTEN",
                    "preferred_service": "translator",
                    "picture_url": "http://172.18.0.1:8000/storage",
                    "updated_at": "2025-07-14T08:13:26.000000Z",
                    "created_at": "2025-07-14T08:13:26.000000Z"
                  }
                },
                "status_code": 201
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "examples": {
              "application/json": {
                "message": "Bad request.",
                "data": {
                  "errors": [
                    {
                      "field": "Error",
                      "message": "Some error appears."
                    }
                  ]
                },
                "status_code": 400
              }
            }
          },
          "422": {
            "description": "Validation error",
            "examples": {
              "application/json": {
                "message": "Request validation failed.",
                "data": {
                  "errors": [
                    {
                      "field": "email",
                      "message": "The email has already been taken."
                    }
                  ]
                },
                "status_code": 422
              }
            }
          }
        }
      }
    },
    "/api/auths/SignIn": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Authentication",
        "operationId": "SignInUser",
        "description": "Authenticates the user and returns an access token (5-minute expiry) along with a refresh token that has a longer expiration period.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "examplePassword123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SignIn successful",
            "examples": {
              "application/json": {
                "message": "SignIn succeeded",
                "data": {
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
                  "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
                  "token_type": "bearer",
                  "expires_in": 600
                },
                "status_code": 200
              }
            }
          },
          "400": {
            "description": "Bad request",
            "examples": {
              "application/json": {
                "message": "Invalid credentials provided.",
                "data": null,
                "status_code": 400
              }
            }
          }
        }
      }
    },
    "/api/auths/SignOut": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Signout",
        "operationId": "SignoutUser",
        "description": "Signs out the current user by deleting the stored refresh token in Redis and invalidating the JWT access token.",
        "responses": {
          "200": {
            "description": "Signout successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "SignOut successful. Token invalidated and refresh token removed"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/auths/generate-access-token": {
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate a new access token",
        "operationId": "GenerateNewAccessToken",
        "description": "This endpoint is locked. You must provide a refresh token in the Authorization header (i.e., replace your typical access token with your refresh token) to generate a new access token. Access token can be used to access other protected endpoints.",
        "responses": {
          "200": {
            "description": "Access token generated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Access token generated successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    },
                    "token_type": {
                      "type": "string",
                      "example": "bearer"
                    },
                    "expires_in": {
                      "type": "integer",
                      "example": 300
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/auths/generate-refresh-token": {
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate Refresh Token",
        "operationId": "ListSessions",
        "description": "This endpoint generates a new Access Token and Refresh Token for the user. It is typically consumed automatically or on a scheduled basis to ensure the user remains signed in to the application. The Refresh Token is used only to generate a new Access Token and to access this endpoint, and cannot be used to access other protected endpoints. It is designed to have a longer expiry than the Access Token.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Token refreshed successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    },
                    "token_type": {
                      "type": "string",
                      "example": "bearer"
                    },
                    "expires_in": {
                      "type": "integer",
                      "example": 300
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token is missing or invalid"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/auths/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update Password",
        "operationId": "UpdatePassword",
        "description": "This endpoint updates the user's password stored in the database. It uses a basic password matching mechanism for authentication — the user must provide their current password to confirm identity before updating to a new one.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials for updating password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "azzamsykir@gmail.com"
                },
                "old_password": {
                  "type": "string",
                  "example": "strongpassword123"
                },
                "new_password": {
                  "type": "string",
                  "example": "strongpassword123"
                }
              },
              "required": [
                "email",
                "old_password",
                "new_password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password updated successfully"
                },
                "data": {
                  "type": "null",
                  "example": null
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token is missing or invalid"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/regions/domicile/{villageId}": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get full domicile string by village ID",
        "operationId": "getDomicileByVillageId",
        "description": "Returns a full string of domicile (village, district, regency, province) based on the provided village ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "villageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Village ID",
            "x-example": "3674070004"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved full domicile address",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved full domicile address"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "province": {
                      "type": "string",
                      "example": "BANTEN"
                    },
                    "regency": {
                      "type": "string",
                      "example": "KOTA TANGERANG SELATAN"
                    },
                    "district": {
                      "type": "string",
                      "example": "SERPONG UTARA"
                    },
                    "village": {
                      "type": "string",
                      "example": "PONDOK JAGUNG TIMUR"
                    },
                    "full_address": {
                      "type": "string",
                      "example": "PONDOK JAGUNG TIMUR, SERPONG UTARA, KOTA TANGERANG SELATAN, BANTEN"
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          }
        }
      }
    },
    "/api/regions/villages/{districtId}": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get list of villages by district ID",
        "operationId": "getVillagesByDistrictId",
        "description": "Returns a list of villages within the specified district.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "districtId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "District ID",
            "x-example": "3674070"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of villages",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved list of villages"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 3674070004
                      },
                      "district_id": {
                        "type": "string",
                        "example": "3674070"
                      },
                      "name": {
                        "type": "string",
                        "example": "PONDOK JAGUNG TIMUR"
                      }
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          }
        }
      }
    },
    "/api/regions/districts/{regencyId}": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get list of districts by regency ID",
        "operationId": "getDistrictsByRegencyId",
        "description": "Returns a list of districts within the specified regency.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "regencyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Regency ID",
            "x-example": "3674"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of districts",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved list of districts"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 3674070
                      },
                      "regency_id": {
                        "type": "string",
                        "example": "3674"
                      },
                      "name": {
                        "type": "string",
                        "example": "SERPONG UTARA"
                      }
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          }
        }
      }
    },
    "/api/regions/regencies/{provinceId}": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get list of regencies by province ID",
        "operationId": "getRegenciesByProvinceId",
        "description": "Returns a list of regencies within the specified province.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Province ID",
            "x-example": "36"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of regencies",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved list of regencies"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 3674
                      },
                      "province_id": {
                        "type": "string",
                        "example": "36"
                      },
                      "name": {
                        "type": "string",
                        "example": "KOTA TANGERANG SELATAN"
                      }
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          }
        }
      }
    },
    "/api/regions/provinces": {
      "get": {
        "tags": [
          "Domicile"
        ],
        "summary": "Get all provinces",
        "operationId": "getAllProvinces",
        "description": "Returns a list of all provinces in the system.",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of provinces",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved list of provinces"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 36
                      },
                      "name": {
                        "type": "string",
                        "example": "BANTEN"
                      }
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all users",
        "operationId": "getAllUsers",
        "description": "Returns a list of all registered users.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved all users."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                      },
                      "name": {
                        "type": "string",
                        "example": "Example User"
                      },
                      "email": {
                        "type": "string",
                        "example": "example.user@example.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                      },
                      "balance": {
                        "type": "integer",
                        "example": 0
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T02:39:54.741293Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T02:39:54.741293Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/email/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by Email",
        "operationId": "getUserByEmail",
        "description": "Get user details based on the provided Email.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "example.user@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully by email.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully by email."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example User"
                    },
                    "email": {
                      "type": "string",
                      "example": "example.user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 0
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "description": "Get user details based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example User"
                    },
                    "email": {
                      "type": "string",
                      "example": "example.user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 0
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user details",
        "operationId": "updateUser",
        "description": "Update user details based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Example Update User"
                },
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                },
                "balance": {
                  "type": "integer",
                  "example": 10000000
                }
              },
              "required": [
                "name",
                "email",
                "balance"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User updated successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example User"
                    },
                    "email": {
                      "type": "string",
                      "example": "example.user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 10000000
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T03:54:01.051294888Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "description": "Delete user based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User has been successfully deleted."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example User"
                    },
                    "email": {
                      "type": "string",
                      "example": "example.user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 10000000
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T03:54:01.051295Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "operationId": "createCategory",
        "description": "Registers a new category.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Example Category"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Category Created Successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "2111a162-a912-454d-aaf0-0feeafe60d9f"
                    },
                    "name": {
                      "type": "string",
                      "example": "example category"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:11:47.988013891Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:11:47.988013891Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get List Category",
        "operationId": "ListCategories",
        "description": "Retrieve a list of categories.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved category list.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved category list."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "2111a162-a912-454d-aaf0-0feeafe60d9f"
                      },
                      "name": {
                        "type": "string",
                        "example": "example category"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T06:11:47.988014Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T06:11:47.988014Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by ID",
        "operationId": "getCategoryById",
        "description": "Retrieves category details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "2111a162-a912-454d-aaf0-0feeafe60d9f"
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Category retrieved successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "2111a162-a912-454d-aaf0-0feeafe60d9f"
                    },
                    "name": {
                      "type": "string",
                      "example": "example category"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:11:47.988014Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:11:47.988014Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Categories"
        ],
        "summary": "Update an existing category",
        "operationId": "updateCategory",
        "description": "Updates an existing category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "example updated category"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Category updated successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
                    },
                    "name": {
                      "type": "string",
                      "example": "example updated category"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:39:10.95694Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:39:12.646837852Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category",
        "operationId": "deleteCategory",
        "description": "Deletes a category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "8aa955d4-3c6a-4d80-943c-6800cdbe4bdc"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Category deleted successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "8aa955d4-3c6a-4d80-943c-6800cdbe4bdc"
                    },
                    "name": {
                      "type": "string",
                      "example": "example category"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:34:46.547866Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:34:46.547866Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "operationId": "createProduct",
        "description": "Creates a new product.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "E256"
                },
                "name": {
                  "type": "string",
                  "example": "example product"
                },
                "stock": {
                  "type": "integer",
                  "example": 100
                },
                "price": {
                  "type": "integer",
                  "example": 7000
                },
                "category_id": {
                  "type": "string",
                  "example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
                }
              },
              "required": [
                "sku",
                "name",
                "stock",
                "price",
                "category_id"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Product created successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "f99116f7-dd32-4672-b99c-e125e867910e"
                    },
                    "sku": {
                      "type": "string",
                      "example": "E256"
                    },
                    "name": {
                      "type": "string",
                      "example": "example product"
                    },
                    "stock": {
                      "type": "integer",
                      "example": 100
                    },
                    "price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "category_id": {
                      "type": "string",
                      "example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:55:22.83409818Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:55:22.83409818Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve all products",
        "operationId": "getAllProducts",
        "description": "Returns a list of all products.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Product list retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Product list retrieved successfully."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "f99116f7-dd32-4672-b99c-e125e867910e"
                      },
                      "sku": {
                        "type": "string",
                        "example": "E256"
                      },
                      "name": {
                        "type": "string",
                        "example": "example product"
                      },
                      "stock": {
                        "type": "integer",
                        "example": 100
                      },
                      "price": {
                        "type": "integer",
                        "example": 7000
                      },
                      "category_id": {
                        "type": "string",
                        "example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T06:55:22.834098Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T06:55:22.834098Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "operationId": "getProductById",
        "description": "Retrieves product details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "f99116f7-dd32-4672-b99c-e125e867910e"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Product details retrieved successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "f99116f7-dd32-4672-b99c-e125e867910e"
                    },
                    "sku": {
                      "type": "string",
                      "example": "E256"
                    },
                    "name": {
                      "type": "string",
                      "example": "example product"
                    },
                    "stock": {
                      "type": "integer",
                      "example": 100
                    },
                    "price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "category_id": {
                      "type": "string",
                      "example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:55:22.834098Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:55:22.834098Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update an existing product",
        "operationId": "updateProduct",
        "description": "Updates an existing product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "f99116f7-dd32-4672-b99c-e125e867910e"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "SKU-UPDATED"
                },
                "name": {
                  "type": "string",
                  "example": "example update product"
                },
                "stock": {
                  "type": "integer",
                  "example": 100
                },
                "price": {
                  "type": "integer",
                  "example": 7000
                }
              },
              "required": [
                "sku",
                "name",
                "stock",
                "price",
                "category_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Product updated successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "f99116f7-dd32-4672-b99c-e125e867910e"
                    },
                    "sku": {
                      "type": "string",
                      "example": "E256"
                    },
                    "name": {
                      "type": "string",
                      "example": "example update product"
                    },
                    "stock": {
                      "type": "integer",
                      "example": 100
                    },
                    "price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "category_id": {
                      "type": "string",
                      "example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:55:22.834098Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T06:58:49.076601703Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "operationId": "deleteProduct",
        "description": "Deletes a product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "3be4c34b-cf94-47f4-b9af-8f2139b259ea"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Product has been successfully deleted."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "3be4c34b-cf94-47f4-b9af-8f2139b259ea"
                    },
                    "sku": {
                      "type": "string",
                      "example": "example product"
                    },
                    "name": {
                      "type": "string",
                      "example": "E930"
                    },
                    "stock": {
                      "type": "integer",
                      "example": 100
                    },
                    "price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "category_id": {
                      "type": "string",
                      "example": "7c9028c2-fd8a-40e8-b42f-c6112cee382c"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T07:00:00.181402Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T07:00:00.181402Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new order",
        "operationId": "createOrder",
        "description": "Creates a new order.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "total_paid": {
                  "type": "string",
                  "example": "20000"
                },
                "user_id": {
                  "type": "string",
                  "example": "568814d8-6c42-426e-a552-cbbec50ee4bb"
                },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "string",
                        "example": "75e42c2e-c245-48b4-b6f9-30d23e47fe55"
                      },
                      "qty": {
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "required": [
                      "productId",
                      "qty",
                      "total_paid"
                    ]
                  }
                }
              },
              "required": [
                "user_id",
                "products"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Order created successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "e6fd0e76-f4c2-4969-bfd7-1b8b28c3440c"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "568814d8-6c42-426e-a552-cbbec50ee4bb"
                    },
                    "receipt_code": {
                      "type": "string",
                      "example": "C108"
                    },
                    "total_price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "total_paid": {
                      "type": "integer",
                      "example": 20000
                    },
                    "total_return": {
                      "type": "integer",
                      "example": 13000
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T09:32:11.471529623Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T09:32:11.471529783Z"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ee9d9b8f-2cca-4941-93df-398e69339526"
                          },
                          "user_id": {
                            "type": "string",
                            "example": "e6fd0e76-f4c2-4969-bfd7-1b8b28c3440c"
                          },
                          "product_id": {
                            "type": "string",
                            "example": "75e42c2e-c245-48b4-b6f9-30d23e47fe55"
                          },
                          "total_price": {
                            "type": "integer",
                            "example": 7000
                          },
                          "qty": {
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-03-03T09:32:11.473435019Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-03-03T09:32:11.473435327Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve all orders",
        "operationId": "getAllOrders",
        "description": "Returns a list of all orders.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved all orders."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "a46c4525-7196-43b9-88d4-8924a4993abb"
                      },
                      "user_id": {
                        "type": "string",
                        "example": "568814d8-6c42-426e-a552-cbbec50ee4bb"
                      },
                      "receipt_code": {
                        "type": "string",
                        "example": "C155"
                      },
                      "total_price": {
                        "type": "integer",
                        "example": 7000
                      },
                      "total_paid": {
                        "type": "integer",
                        "example": 20000
                      },
                      "total_return": {
                        "type": "integer",
                        "example": 13000
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T09:54:05.246685Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T09:54:05.246685Z"
                      },
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "5875486d-cfea-4f67-af14-842092b5c3f8"
                            },
                            "user_id": {
                              "type": "string",
                              "example": "a46c4525-7196-43b9-88d4-8924a4993abb"
                            },
                            "product_id": {
                              "type": "string",
                              "example": "75e42c2e-c245-48b4-b6f9-30d23e47fe55"
                            },
                            "total_price": {
                              "type": "integer",
                              "example": 7000
                            },
                            "qty": {
                              "type": "integer",
                              "example": 1
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2025-03-03T09:54:05.247091Z"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2025-03-03T09:54:05.247091Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order by ID",
        "operationId": "getOrderById",
        "description": "Retrieves order details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "a46c4525-7196-43b9-88d4-8924a4993abb"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved order details."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "a46c4525-7196-43b9-88d4-8924a4993abb"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "568814d8-6c42-426e-a552-cbbec50ee4bb"
                    },
                    "receipt_code": {
                      "type": "string",
                      "example": "C155"
                    },
                    "total_price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "total_paid": {
                      "type": "integer",
                      "example": 20000
                    },
                    "total_return": {
                      "type": "integer",
                      "example": 13000
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T09:54:05.246685Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T09:54:05.246685Z"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "5875486d-cfea-4f67-af14-842092b5c3f8"
                          },
                          "user_id": {
                            "type": "string",
                            "example": "a46c4525-7196-43b9-88d4-8924a4993abb"
                          },
                          "product_id": {
                            "type": "string",
                            "example": "75e42c2e-c245-48b4-b6f9-30d23e47fe55"
                          },
                          "total_price": {
                            "type": "integer",
                            "example": 7000
                          },
                          "qty": {
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-03-03T09:54:05.247091Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-03-03T09:54:05.247091Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    }
  }
}